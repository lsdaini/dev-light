<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.luis.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="net.luis.entity.Admin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="BIGINT" />
    <result column="roleId" property="roleid" jdbcType="BIGINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.luis.entity.Admin" >
    insert into t_admin (id, username, password, 
      enable, roleId)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{enable,jdbcType=BIGINT}, #{roleid,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="net.luis.entity.Admin" >
    update t_admin
    set 
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIGINT},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT}
      </if>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, username, password, enable, roleId
    from t_admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, username, password, enable, roleId
    from t_admin
  </select>
  <select id="selectCountByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Long">
    select count(*)
    from t_admin
    where roleId = #{roleId,jdbcType=BIGINT}
  </select>
  <select id="selectByParam" resultMap="BaseResultMap" parameterType="map">
    select id, username, enable, roleId
    from t_admin
    where 1=1
    <if test="param.username != null and param.username != ''" >
        and username like CONCAT('%',#{param.username,jdbcType=VARCHAR},'%')
    </if>
    order by id desc
    limit #{param.start,jdbcType=INTEGER},#{param.length,jdbcType=INTEGER}
  </select>
  <select id="selectCountByParam" resultType="java.lang.Integer" parameterType="map">
    select count(*)
    from t_admin 
    where 1=1
    <if test="param.username != null and param.username != ''" >
        and username like CONCAT('%',#{param.username,jdbcType=VARCHAR},'%')
    </if>
  </select>
  <select id="selectByName" resultMap="BaseResultMap">
    select id, username, password, enable, roleId
    from t_admin
    where username = #{username,jdbcType=VARCHAR}
    <if test="id != null">
    	and id <![CDATA[<>]]> #{id,jdbcType=BIGINT}
    </if>
  </select>
  <select id="login" resultMap="BaseResultMap" parameterType="net.luis.entity.Admin" >
    select id, username, password, enable, roleId
    from t_admin
    where username = #{username,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <select id="selectEnable" resultMap="BaseResultMap" parameterType="net.luis.entity.Admin" >
    select id, username, password, enable, roleId
    from t_admin
    where username = #{username,jdbcType=VARCHAR} and enable = 1
  </select>
</mapper>